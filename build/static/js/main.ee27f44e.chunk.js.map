{"version":3,"sources":["Header/SessionButton.js","Header/Header.js","Welcome/Welcome.js","Tools/UserSession.js","Projects/RecentProjectsService.js","Projects/ProjectCard.js","Projects/RecentProjects.js","Templates/CardPageTemplate.js","Profile/Profile.js","Templates/BlogPageTemplate.js","Templates/BlogPostTemplate.js","TemplateContainer/TemplateContainer.js","GithubCards/GithubCard.js","GithubCards/GithubCardContainer.js","Wireframe/WireframeService.js","Wireframe/WireframeEditView.js","App/App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","goToAuth","window","location","href","loginButton","react_default","a","createElement","type","onClick","user","setGitWiredToken","updateState","className","value","logoutButton","logout","changeLoggedInState","bind","assertThisInitialized","Fragment","isLoggedIn","Component","toggleDropdown","event","preventDefault","setState","showDropdown","state","handleTemplateSelection","templateName","selectTemplate","_this2","loggedIn","name","target","viewProfile","SessionButton_Header","Welcome","UserSession","Boolean","getGitWiredToken","getURLToken","arr","split","length","pop","login","token","tokenKey","sessionStorage","setItem","getItem","removeItem","RecentProjectsService","getRecents","parseFunc","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","json","data","catch","error","console","id","attributes","recent","projectTitle","repoName","updatedAt","createdAt","ProjectCard","project","getTitle","getRepo","getUpdated","getCreated","renderTitle","renderRepo","renderUpdated","renderCreated","RecentProjects","parseRecentProjects","cards","recents","stubRecent","map","card","ProjectCard_ProjectCard","renderProjectCards","CardPageTemplate","addBtnToHeader","headerButtons","renderBtnToHeader","btnArr","i","push","key","BlogPageTemplate","componentDidUpdate","findElementChildrenToHide","refs","element","children","values","forEach","child","cardIds","includes","parseInt","classList","add","remove","ref","BlogPostTemplate","TemplateContainer","updateChildrenState","renderCurrentTemplate","template","CardPageTemplate_CardPageTemplate","BlogPageTemplate_BlogPageTemplate","BlogPostTemplate_BlogPostTemplate","currentTemplate","GithubCard","getDescription","renderDescription","getCardURL","getNumber","renderNumber","getStatus","renderStatus","GithubCardContainer","renderGithubCards","index","GithubCard_GithubCard","cardsStatusSelect","statusName","filterCardsAndTemplateElementsByStatus","WireframeService","getGithub","project_id","url","concat","getWireframe","wireframe_id","repo","cardTitle","cardDescription","cardURL","cardNumber","cardStatus","cardColumn","title","updated","created","templateData","WireframeEditView","parseWireframeResponse","info","wireframeTitle","wireframeUpdated","wireframeCreated","parseGithubResponse","status","filteredCards","filter","getFilteredCardIdsToFilterElements","frame","stubGithub","stubWireframe","TemplateContainer_TemplateContainer_TemplateContainer","GithubCardContainer_GithubCardContainer","App","selectComponentRender","WireframeEditView_WireframeEditView","Welcome_Welcome_Welcome","Header_Header_Header","hostname","match","ReactDOM","render","App_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee27f44e.chunk.js","sourcesContent":["\nimport React, { Component } from 'react';\n\nexport default class Header extends Component {\n\n  constructor(props) {\n    super(props)\n    this.updateState = this.props.changeLoggedInState.bind(this)\n  }\n\n\n goToAuth = () => {\n   window.location.href='https://git-wired-be.herokuapp.com/authenticate'\n }\n\n loginButton = () => {\n   return (\n     <input type=\"button\"\n            onClick={ () => {\n              this.props.user.setGitWiredToken('123');\n              this.updateState()\n                // this.goToAuth()\n              }\n            }\n            className='header-btn header-login-btn'\n            value=\"Login\"\n    />\n   )\n }\n\n logoutButton = () => {\n   return (\n     <input type=\"button\"\n            onClick={ () => {\n              this.props.user.logout();\n              this.updateState()\n              }\n            }\n            className='header-btn header-logout-btn'\n            value=\"Logout\"\n    />\n   )\n }\n\n render() {\n  return (\n    <React.Fragment>\n      { this.props.user.isLoggedIn() ? this.logoutButton() : this.loginButton() }\n    </React.Fragment>\n  )\n }\n\n}\n","import React, { Component } from 'react';\nimport './Header.css';\n\nimport SessionButton from './SessionButton.js'\n\nexport default class Header extends Component {\n  constructor() {\n    super()\n    this.state = {\n      showDropdown: false\n    }\n  }\n\n  toggleDropdown = (event) => {\n    event.preventDefault()\n\n    this.setState({ showDropdown: !this.state.showDropdown })\n  }\n\n  handleTemplateSelection = (event, templateName) => {\n    event.preventDefault()\n\n    this.setState({ showDropdown: false })\n    this.props.selectTemplate(event, templateName)\n  }\n\n  render() {\n    if (this.props.loggedIn) {\n      return (\n        <div className='Header'>\n          <span className='header-btn-container'>\n            <button className='header-btn header-home-btn'>Git Wired</button>\n            <button className='header-btn header-help-btn'>Help</button>\n          </span>\n          <span className='header-btn-container'>\n            <div className='header-recent-projects-btn-dropdown-container'>\n              <button className='header-btn header-recent-projects-btn' onClick={this.toggleDropdown}>Recent Projects</button>\n              {\n                this.state.showDropdown ? (\n                  <div className='header-recent-projects-btn-dropdown'>\n                    <button className='header-recent-projects-btn-dropdown-btn'\n                            name='card-page-template'\n                            onClick={(event) => this.handleTemplateSelection(event, event.target.name)}\n                    >card page template\n                    </button>\n                    <button className='header-recent-projects-btn-dropdown-btn'\n                            name='blog-page-template'\n                            onClick={(event) => this.handleTemplateSelection(event, event.target.name)}\n                    >blog page template\n                    </button>\n                    <button className='header-recent-projects-btn-dropdown-btn'\n                            name='blog-post-template'\n                            onClick={(event) => this.handleTemplateSelection(event, event.target.name)}\n                    >blog post template\n                    </button>\n                  </div>\n                ) : (\n                  null\n                )\n              }\n            </div>\n            <button className='header-btn header-profile-btn'\n                    onClick={this.props.viewProfile}\n                    >Profile\n            </button>\n            <SessionButton user={this.props.user} changeLoggedInState={this.props.changeLoggedInState}/>\n          </span>\n        </div>\n      )\n    } else {\n      return (\n        <div className='Header'>\n          <button className='header-btn header-home-btn'>Git Wired</button>\n          <span className='header-title-container'>\n            <h1 className='header-main-title'>Welcome!</h1>\n            <h3 className='header-sub-title'><a>Login</a> to get started!</h3>\n          </span>\n          <span className='header-btn-container'>\n            <SessionButton user={this.props.user} changeLoggedInState={this.props.changeLoggedInState}/>\n          </span>\n        </div>\n      )\n    }\n  }\n}\n","import React, { Component } from 'react'\nimport './Welcome.css';\n\nexport default class Welcome extends Component {\n  render() {\n    return (\n      <div className='Welcome'>\n        <h2 className='welcome-content-description-title'>Welcome to GitWired!</h2>\n        <div className='welcome-content-description'>\n          <p>\n          This is an organizational tool to setup minimal, static, black & white,\n          sketch-like wireframes as a representation of your GitHub issue and\n          project cards. By pairing wireframe elements to GitHub issues in a\n          Repository & Project of your choosing, you can filter your features and\n          GitHub cards based on completion status to see your feature progress in\n          relation to all your features - the end goal!\n          </p>\n          <p>\n          This tool is intended for small teams, who desire simple and no-fuss wireframes\n          where keeping track of feature completion is the highest priority in team communication.\n          </p>\n          <p>\n          Leave the details in your user stories and UX PDFs - get a quick summary of the project with GitWired!\n          </p>\n        </div>\n        <h2 className='welcome-content-instructions-title'>Get Started!</h2>\n        <div className='welcome-content-instructions'>\n          <p>\n          First - login with GitHub!\n          </p>\n          <p>\n          Everything in this app is directly tied to the current (and future) state\n          of your GitHub account. And no personal user data is stored!\n          </p>\n          <p>\n          This app can be used with both your public & private repos, projects, and issues.\n          </p>\n          <p>\n          Once you login, you can start a new project by selecting the collection of issues you'd\n          like to work with and a template wireframe to attach them to. You're wireframe\n          is already largely setup, with some customization flexibility, to get you up and running quickly!\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n","export default class UserSession {\n  constructor() {\n    this.tokenKey = 'userToken'\n  }\n\n  setGitWiredToken(token) {\n    if (token) {sessionStorage.setItem(this.tokenKey, token)};\n  }\n\n  getGitWiredToken() {\n    return sessionStorage.getItem(this.tokenKey);\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.tokenKey);\n  }\n\n\n  isLoggedIn = () => {\n    return Boolean( this.getGitWiredToken() )\n  }\n\n  getURLToken = () => {\n    let url = window.location.href\n    let arr = url.split('=')\n    return arr.length >= 2 ? arr.pop : null\n  }\n\n  login = () => {\n    let token = this.getURLToken()\n    this.setGitWiredToken(token)\n  }\n\n\n}\n","import UserSession from '../Tools/UserSession.js'\n\n\nexport default class RecentProjectsService {\n\n  constructor() {\n    this.user = new UserSession\n  }\n\n  stubRecent() {\n    let stub =  {\n      'data': {\n        'id':         1,\n        'attributes': {\n          'recent': [\n            {\n              'projectTitle':   \"Wireframe Title 1\",\n              'repoName':       \"Repo 1\",\n              'updatedAt':      \"Updated At\",\n              'createdAt':      \"Created At\",\n            },\n            {\n              'projectTitle':   \"Wireframe Title 2\",\n              'repoName':       \"Repo 2\",\n              'updatedAt':      \"Updated At\",\n              'createdAt':      \"Created At\",\n            },\n          ],\n        }\n      },\n    }\n    return stub\n  }\n\n\n  getRecents = (parseFunc) => {\n    // TO DO - Confirm ENDPOINT\n    // let url = 'https://git-wired-be.herokuapp.com/api/v1/projects'\n    let url = 'https://git-wired-be.herokuapp.com/api/v1/wireframes'\n    fetch(url, {\n        method:  \"GET\",\n        headers: { \"Content-Type\": \"application/json\", },\n        body:    JSON.stringify(this.user.getGitWiredToken()),\n    })\n    .then(response => response.json() )\n    .then(data     => parseFunc(data))\n    .catch(error   => console.error('Error:', error));\n  }\n\n\n\n}\n","import React, { Component } from 'react';\nimport './ProjectCard.css'\n\n\nexport default class ProjectCard extends Component {\n\n  // --- Project Name ---\n\n  getTitle() {\n    return this.props.project['projectTitle']\n  }\n\n  renderTitle(){\n    return (\n      <div className='ProjectTitle'> { this.getTitle() } </div>\n    )\n  }\n\n  // --- Repo Name ---\n\n  getRepo() {\n    return this.props.project['repoName']\n  }\n\n  renderRepo(){\n    return (\n      <div className='RepoName'> { this.getRepo() } </div>\n    )\n  }\n\n  // --- Updated ---\n\n  getUpdated() {\n    return this.props.project['updatedAt']\n  }\n\n  renderUpdated(){\n    return (\n      <div className='Updated'> { this.getUpdated() } </div>\n    )\n  }\n\n  // --- Created ---\n\n  getCreated() {\n    return this.props.project['createdAt']\n  }\n\n  renderCreated(){\n    return (\n      <div className='Created'> { this.getCreated() } </div>\n    )\n  }\n\n\n  // --- Image ---\n\n  // TO DO - Display image (not MVP)\n\n\n\n  render() {\n    return (\n      <span className='ProjectCard'>\n        { this.renderTitle()   }\n        { this.renderRepo()    }\n        { this.renderUpdated() }\n        { this.renderCreated() }\n      </span>\n    )\n  }\n\n\n}\n","import React, { Component } from 'react';\nimport RecentProjectsService from './RecentProjectsService.js'\nimport ProjectCard from './ProjectCard.js'\nimport UserSession from '../Tools/UserSession.js'\n\n\nexport default class RecentProjects extends Component {\n  componentDidMount() {\n    const recents = new RecentProjectsService\n    // ------- API call HERE ----------\n    // TO DO - add this when API is functional\n    // frame.getRecents( parseFunc = (data) => { this.parseRecentProjects(data) })\n    this.parseRecentProjects( recents.stubRecent() )\n  }\n\n  parseRecentProjects = (data) => {\n    let cards = data['data']['attributes']['recent']\n    this.setState( { cards: cards } )\n  }\n\n\n  // TO DO - TEST ME\n  renderProjectCards(data){\n    let cards = this.state.cards\n    return cards.map( (card) => <ProjectCard project={card} /> )\n  }\n\n  // TO DO - TEST ME\n  render() {\n    if (this.state == null || undefined) { return null }\n    return (\n      <div className='RecentProjects'>\n        { this.renderProjectCards() }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './Templates.css';\n\nexport default class CardPageTemplate extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      headerButtons: 0\n    }\n  }\n\n  addBtnToHeader = (event) => {\n    event.preventDefault()\n    this.setState({ headerButtons: this.state.headerButtons + 1 })\n  }\n\n  renderBtnToHeader = () => {\n    const btnArr = []\n    for (let i = 0; this.state.headerButtons > i; i++) {\n      btnArr.push(<button key={i} className='template-header-btn'></button>)\n    }\n    return btnArr\n  }\n\n  render() {\n    return (\n      <div className='CardPageTemplate'>\n        <div className='template-header'>\n        <div className='pseudo-btn-space'></div>\n          <i className=\"far fa-plus-square\" onClick={this.addBtnToHeader}></i>\n          {\n            this.renderBtnToHeader()\n          }\n        </div>\n        <div className='template-card-container'>\n          <div className='template-card'></div>\n          <div className='template-card'></div>\n          <div className='template-card'></div>\n          <div className='template-card'></div>\n        </div>\n        <div className='template-footer'></div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport RecentProjects from '../Projects/RecentProjects.js'\nimport './Profile.css';\n\nexport default class Profile extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return (\n      <div className='Profile'>\n        <div className='profile-select-options'>\n          <h2 className='profile-select-options-title'>Pick a new wireframe!</h2>\n          <div className='profile-select-options-btn-container'>\n            <button>Repo</button>\n            <button>Project</button>\n            <button>Type of page</button>\n          </div>\n        </div>\n        <div className='recent-projects-container'>\n          <h2 className='recent-projects-container-title'>Recent Projects</h2>\n          <div className='recent-projects-card-container'>\n          {  <RecentProjects /> }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './Templates.css';\n\nexport default class BlogPageTemplate extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      headerButtons: 0\n    }\n  }\n\n  componentDidUpdate = () => { \n    this.findElementChildrenToHide(this.refs.BlogPageTemplate)  \n  }\n\n  findElementChildrenToHide = (element) => {\n    if (element.children) {\n      Object.values(element.children).forEach(child => {\n        if (this.props.cardIds) {\n          if (this.props.cardIds.includes(parseInt(child.id))) {\n            child.classList.add('hideTemplateElement')\n          } else {\n            child.classList.remove('hideTemplateElement')            \n          }            \n        } else {\n          child.classList.remove('hideTemplateElement')                      \n        }\n\n        this.findElementChildrenToHide(child)\n      })\n    }      \n  }\n\n  addBtnToHeader = (event) => {\n    event.preventDefault()\n\n    this.setState({ headerButtons: this.state.headerButtons + 1 })\n  }\n\n  renderBtnToHeader = () => {\n    const btnArr = []\n    for (let i = 0; this.state.headerButtons > i; i++) {\n      btnArr.push(<button key={i} className='template-header-btn'></button>)\n    }\n    return btnArr\n  }\n\n\n  render() {\n    return (\n      <div className='BlogPageTemplate' ref='BlogPageTemplate'>\n        <div className='template-header' id='11'>\n        <div className='pseudo-btn-space'></div>\n          <i className=\"far fa-plus-square\" onClick={this.addBtnToHeader}></i>\n          {\n            this.renderBtnToHeader()\n          }\n        </div>\n        <div className='template-card-container'>\n          <div className='template-page-section' id='12'></div>\n          <div className='template-page-section' id='13'></div>        \n        </div>\n        <div className='template-footer' id='14'></div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './Templates.css';\n\nexport default class BlogPostTemplate extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      headerButtons: 0\n    }\n  }\n\n  addBtnToHeader = (event) => {\n    event.preventDefault()\n    this.setState({ headerButtons: this.state.headerButtons + 1 })\n  }\n\n  renderBtnToHeader = () => {\n    const btnArr = []\n    for (let i = 0; this.state.headerButtons > i; i++) {\n      btnArr.push(<button key={i} className='template-header-btn'></button>)\n    }\n    return btnArr\n  }\n\n  render() {\n    return (\n      <div className='BlogPostTemplate'>\n        <div className='template-header'>\n        <div className='pseudo-btn-space'></div>\n          <i className=\"far fa-plus-square\" onClick={this.addBtnToHeader}></i>\n          {\n            this.renderBtnToHeader()\n          }\n        </div>\n        <div className='template-card-container'>\n          <div className='template-post-main'></div>\n          <div className='template-post-sub-container'>\n            <div className='template-post-sub'></div>\n            <div className='template-post-sub'></div>            \n          </div>\n        </div>\n        <div className='template-footer'></div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport CardPageTemplate from '../Templates/CardPageTemplate.js';\nimport BlogPageTemplate from '../Templates/BlogPageTemplate.js';\nimport BlogPostTemplate from '../Templates/BlogPostTemplate.js';\nimport './TemplateContainer.css';\n\nexport default class TemplateContainer extends Component {\n  constructor() {\n    super()\n  }\n\n  updateChildrenState = () => {\n    return this.props.cardIds\n  }\n\n  renderCurrentTemplate = (template) => {\n    switch(template) {\n      case 'card-page-template':\n        return <CardPageTemplate cardIds={this.updateChildrenState()}/>\n      case 'blog-page-template':\n        return <BlogPageTemplate cardIds={this.updateChildrenState()}/>\n      case 'blog-post-template':\n        return <BlogPostTemplate cardIds={this.updateChildrenState()}/>\n      default:\n        return <h2>Please select a template type from the Recent Projects dropdown menu</h2>\n    }\n  }\n\n  render() {\n    return (\n      <div className='TemplateContainer'>\n        {\n          this.renderCurrentTemplate(this.props.currentTemplate)\n        }\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './GithubCard.css'\n\n\nexport default class GithubCard extends Component {\n\n\n  // --- Card Title ---\n\n  getTitle = () => {\n    return this.props.card['cardTitle']\n  }\n\n  renderTitle = () => {\n    return (\n      <div className='CardTitle'>{ this.getTitle() }</div>\n    )\n  }\n\n  // --- Card Description ---\n\n  getDescription = () => {\n    return this.props.card['cardDescription']\n  }\n\n  renderDescription = () => {\n    return (\n      <div className='CardDescription'>{ this.getDescription() }</div>\n    )\n  }\n\n  // --- Card Number ---\n\n  getCardURL = () => {\n    return this.props.card['cardURL']\n  }\n\n  getNumber = () => {\n    return this.props.card['cardNumber']\n  }\n\n  renderNumber = () => {\n    return (\n      <div className='CardNumber'>\n        <a href={ this.getCardURL() }>#{ this.getNumber() }</a>\n      </div>\n    )\n  }\n\n  // --- Card Status ---\n\n  getStatus = () => {\n    return this.props.card['cardStatus']\n  }\n\n  renderStatus = () => {\n    return (\n      <div className='CardStatus'>{ this.getStatus() }</div>\n    )\n  }\n\n  // --- Card Column ---\n\n  // TO DO - Github APIs cannot yet supply this information\n  // therefore - is not part of MVP\n\n  // getColumn = () => {\n  //   return this.props.card['cardColumn']\n  // }\n  //\n  // renderColumn = () => {\n  //   return (\n  //     <div className='CardColumn'>{ this.getColumn() }</div>\n  //   )\n  // }\n\n  // removed from render  --> // { this.renderColumn()      }\n\n\n  // --- Card Connection ---\n\n  // TO DO - determines & Displays if card is connected to wireframe element\n\n\n  // --- SHOW MORE / LESS ---\n\n  //  TO DO - add a button to toggle display of  card description\n\n\n  render() {\n    return (\n      <span className='GithubCard'>\n\n        <div className='GithubCardMinimum'>\n          <span className='GithubCardHeaders'>\n            { this.renderTitle()       }\n            { this.renderNumber()      }\n          </span>\n          <span className='GithubCardLabels'>\n            { this.renderStatus()      }\n          </span>\n        </div>\n        { this.renderDescription() }\n      </span>\n    )\n  }\n\n\n}\n","\nimport React, { Component } from 'react';\n\nimport './GithubCardContainer.css'\n\nimport GithubCard from './GithubCard.js'\n\n\n\nexport default class GithubCardContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showDropdown: false,\n      statusName: ''\n    }\n  }\n\n  // TO DO - TEST ME\n  renderGithubCards = () => {\n    let cards = this.props.cards\n    return cards.map( (card, index) => <GithubCard card={card} key={index} /> )\n  }\n\n  toggleDropdown = (event) => {\n    event.preventDefault()\n\n    this.setState({ showDropdown: !this.state.showDropdown })\n  }\n\n  cardsStatusSelect = (event, statusName) => {\n    event.preventDefault()\n\n    this.props.filterCardsAndTemplateElementsByStatus(statusName)\n    this.setState({ showDropdown: false, statusName })\n  }\n\n  // TO DO - TEST ME\n  render() {\n    return (\n      <div className='github-cards-container'>\n        <div className='github-cards-container-header'>\n          <div className='github-title'>Github Issues</div>\n          <button onClick={this.toggleDropdown}>status</button>\n          {\n            this.state.showDropdown ? (\n              <div className='github-cards-container-status-dropdown'>\n                <button className='github-cards-container-status-dropdown'\n                        onClick={(event) => this.cardsStatusSelect(event, event.target.name)}\n                >---Show All---</button>\n                <button className='github-cards-container-status-dropdown'\n                        name='open'\n                        onClick={(event) => this.cardsStatusSelect(event, event.target.name)}\n                >Open</button>\n                <button className='github-cards-container-status-dropdown'\n                        name='closed'\n                        onClick={(event) => this.cardsStatusSelect(event, event.target.name)}\n                >Closed</button>\n                <button className='github-cards-container-status-dropdown'\n                        name='in-progress'\n                        onClick={(event) => this.cardsStatusSelect(event, event.target.name)}\n                >In-Progress</button>\n                <button className='github-cards-container-status-dropdown'\n                        name='to-do'\n                        onClick={(event) => this.cardsStatusSelect(event, event.target.name)}                        \n                >To Do</button>\n              </div>\n            ) : (\n              null\n            )\n          }\n        </div>\n        <div className='github-cards'>\n          { this.renderGithubCards() }\n        </div>\n      </div>\n    )\n  }\n\n\n}\n","import UserSession from '../Tools/UserSession.js'\n\nexport default class WireframeService {\n\n  constructor() {\n    this.user = new UserSession\n  }\n\n  stubGithub() {\n    let stub =  {\n      'data': {\n        'id':         1,\n        'attributes': {\n          'repo': {\n            'name': \"Repo Name\",\n            'url':  'https://github.com/JoelSmith123/git_wired_fe',\n          },\n          'project': {\n            'name': \"Project Name\",\n            'url':  'https://github.com/JoelSmith123/git_wired_fe/projects/1',\n          },\n          'cards': [\n            {\n              'cardTitle':       \"Card 1\",\n              'cardDescription': \"Description 1\",\n              'cardURL':         \"https://github.com/JoelSmith123/git_wired_fe/issues/23\",\n              'cardNumber':      11,\n              'cardStatus':      'open',\n              'cardColumn':      'Column 1',\n            },\n            {\n              'cardTitle':       \"Card 2\",\n              'cardDescription': \"Description 2\",\n              'cardURL':         \"https://github.com/JoelSmith123/git_wired_fe/issues/23\",\n              'cardNumber':      12,\n              'cardStatus':      'closed',\n              'cardColumn':      'Column 2',\n            },\n            {\n              'cardTitle':       \"Card 3\",\n              'cardDescription': \"Description 3\",\n              'cardURL':         \"https://github.com/JoelSmith123/git_wired_fe/issues/23\",\n              'cardNumber':      13,\n              'cardStatus':      'in-progress',\n              'cardColumn':      'Column 3',\n            },\n            {\n              'cardTitle':       \"Card 4\",\n              'cardDescription': \"Description 4\",\n              'cardURL':         \"https://github.com/JoelSmith123/git_wired_fe/issues/23\",\n              'cardNumber':      14,\n              'cardStatus':      'to-do',\n              'cardColumn':      'Column 4',\n            },\n            {\n              'cardTitle':       \"Card 5\",\n              'cardDescription': \"Description 5\",\n              'cardURL':         \"https://github.com/JoelSmith123/git_wired_fe/issues/23\",\n              'cardNumber':      15,\n              'cardStatus':      'open',\n              'cardColumn':      'Column 5',\n            },\n            {\n              'cardTitle':       \"Card 6\",\n              'cardDescription': \"Description 6\",\n              'cardURL':         \"https://github.com/JoelSmith123/git_wired_fe/issues/23\",\n              'cardNumber':      16,\n              'cardStatus':      'closed',\n              'cardColumn':      'Column 6',\n            },\n            {\n              'cardTitle':       \"Card 7\",\n              'cardDescription': \"Description 7\",\n              'cardURL':         \"https://github.com/JoelSmith123/git_wired_fe/issues/23\",\n              'cardNumber':      17,\n              'cardStatus':      'in-progress',\n              'cardColumn':      'Column 7',\n            },\n            {\n              'cardTitle':       \"Card 8\",\n              'cardDescription': \"Description 8\",\n              'cardURL':         \"https://github.com/JoelSmith123/git_wired_fe/issues/23\",\n              'cardNumber':      18,\n              'cardStatus':      'to-do',\n              'cardColumn':      'Column 8',\n            },\n            {\n              'cardTitle':       \"Card 9\",\n              'cardDescription': \"Description 9\",\n              'cardURL':         \"https://github.com/JoelSmith123/git_wired_fe/issues/23\",\n              'cardNumber':      19,\n              'cardStatus':      'open',\n              'cardColumn':      'Column 9',\n            },\n            {\n              'cardTitle':       \"Card 10\",\n              'cardDescription': \"Description 10\",\n              'cardURL':         \"https://github.com/JoelSmith123/git_wired_fe/issues/23\",\n              'cardNumber':      20,\n              'cardStatus':      'closed',\n              'cardColumn':      'Column 10',\n            },\n            {\n              'cardTitle':       \"Card 11\",\n              'cardDescription': \"Description 11\",\n              'cardURL':         \"https://github.com/JoelSmith123/git_wired_fe/issues/23\",\n              'cardNumber':      21,\n              'cardStatus':      'in-progress',\n              'cardColumn':      'Column 11',\n            },\n            {\n              'cardTitle':       \"Card 12\",\n              'cardDescription': \"Description 12\",\n              'cardURL':         \"https://github.com/JoelSmith123/git_wired_fe/issues/23\",\n              'cardNumber':      22,\n              'cardStatus':      'to-do',\n              'cardColumn':      'Column 12',\n            },\n          ],\n        }\n      },\n    }\n    return stub\n  }\n\n  getGithub = (parseFunc) => {\n    // TO DO - Confirm ENDPOINT\n    let id  = this.props.project_id\n    let url = `https://git-wired-be.herokuapp.com/api/v1/projects/${id}/cards`\n    fetch(url, {\n        method:  \"GET\",\n        headers: { \"Content-Type\": \"application/json\", },\n        body:    JSON.stringify(this.user.getGitWiredToken()),\n    })\n    .then(response => response.json() )\n    .then(data     => parseFunc(data))\n    .catch(error   => console.error('Error:', error));\n  }\n\n\n  stubWireframe() {\n    let stub = {\n      'data': {\n        'id':         1,\n        'attributes': {\n          'title':        \"Wireframe Title\",\n          'updated':      \"Updated At\",\n          'created':      \"Created At\",\n          'templateData': \"{'Something': 1, 'Something': 2}\",\n        },\n      },\n    }\n    return stub\n  }\n\n  getWireframe = (parseFunc) => {\n    // TO DO - Confirm ENDPOINT\n    let id  = this.props.wireframe_id\n    let url = `https://git-wired-be.herokuapp.com/api/v1/wireframes/${id}`\n    fetch(url, {\n        method:  \"GET\",\n        headers: { \"Content-Type\": \"application/json\", },\n        body:    JSON.stringify(this.user.getGitWiredToken()),\n    })\n    .then(response => response.json() )\n    .then(data     => parseFunc(data))\n    .catch(error   => console.error('Error:', error));\n  }\n\n\n\n}\n","import React, { Component } from 'react';\nimport TemplateContainer   from '../TemplateContainer/TemplateContainer.js'\nimport GithubCardContainer from '../GithubCards/GithubCardContainer.js'\nimport WireframeService    from './WireframeService.js'\nimport './WireframeEditView.css'\n\n\nexport default class WireframeEditView extends Component {\n\n\n  componentDidMount() {\n    const frame = new WireframeService\n    // ------- API call HERE ----------\n    // TO DO - add this when API is functional\n    // frame.getGithub( parseFunc = (data) => { this.parseGithubResponse(data) })\n    this.parseGithubResponse( frame.stubGithub() )\n    // ------- API call HERE ----------\n    // TO DO - add this when API is functional\n    // frame.getWireframe( parseFunc = (data) => { this.parseWireframeResponse(data) })\n    this.parseWireframeResponse( frame.stubWireframe() )\n  }\n\n\n  //  --- Make Wireframe API req ---\n\n  parseWireframeResponse = (data) => {\n    let info    = data['data']['attributes']\n    let title   = info['title']\n    let updated = info['updated']\n    let created = info['created']\n    this.setState( {\n      wireframeTitle:   title,\n      wireframeUpdated: updated,\n      wireframeCreated: created\n    } )\n  }\n\n  //  --- Make GITHUB API req ---\n\n  parseGithubResponse = (data) => {\n    let info    = data['data']['attributes']\n    let repo    = info['repo']\n    let project = info['project']\n    let cards   = info['cards']\n    this.setState( {\n      repo,\n      project,\n      cards\n    } )\n  }\n\n  filterCardsAndTemplateElementsByStatus = (status) => {\n    if (status) {\n      const filteredCards = this.state.cards.filter(card => card.cardStatus === status)\n\n      this.setState({ filteredCards })      \n    } else {\n      this.setState({ filteredCards: null })\n    }\n  }\n\n  getFilteredCardIdsToFilterElements = () => {\n    if (this.state.filteredCards) {\n      return this.state.filteredCards.map(card => card.cardNumber)      \n    } else {\n      return null\n    }\n  }\n\n\n  render() {\n    if (this.state == null || undefined) { return null }\n    return (\n      <div className='WireframeEditView'>\n\n        <div className='WireframeHeaderContainer'>\n\n          <span className='WireframeTitle'>{ this.state.wireframeTitle }</span>\n          <span className='Timestamps'>\n            <span className='UpdatedTimestamp'>{ this.state.wireframeUpdated }</span>\n            <span className='CreatedTimestamp'>{ this.state.wireframeCreated }</span>\n          </span>\n\n          <span className='GithubLinks'>\n            <span className='RepoName'>\n              <a href={this.state.repo['url']}>{ this.state.repo['name'] }</a>\n            </span>\n            <span className='ProjectName'>\n              <a href={this.state.project['url']}>{ this.state.project['name'] }</a>\n            </span>\n          </span>\n\n        </div>\n\n        <div className='WireframeEditContent'>\n          <TemplateContainer currentTemplate={this.props.template}\n                             cardIds={this.getFilteredCardIdsToFilterElements()}\n           />\n          <GithubCardContainer cards={ this.state.filteredCards ?  this.state.filteredCards : this.state.cards } \n                               filterCardsAndTemplateElementsByStatus={this.filterCardsAndTemplateElementsByStatus}\n          />\n        </div>\n\n      </div>\n    )\n  }\n\n\n\n\n\n}\n","import React, { Component } from 'react';\n\nimport './App.css';\n\nimport Header             from '../Header/Header.js';\nimport Welcome            from '../Welcome/Welcome.js'\nimport Profile            from '../Profile/Profile.js';\nimport RecentProjects     from '../Projects/RecentProjects.js'\nimport WireframeEditView  from '../Wireframe/WireframeEditView.js'\nimport TemplateContainer  from '../TemplateContainer/TemplateContainer.js'\n\nimport './App.css';\n\nexport default class App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      loggedIn: Boolean(sessionStorage['userToken']),\n      template: '',\n      viewProfile: false\n    }\n  }\n\n  componentDidMount() {\n    if (Boolean(this.props.user.getURLToken())) {\n      this.props.user.login()\n      this.setState({ loggedIn: this.props.user.isLoggedIn() })\n    }\n  }\n\n  selectTemplate = (event, template) => {\n    event.preventDefault()\n\n    this.setState({ template })\n  }\n\n  changeLoggedInState = (event) => {\n    if (event) {event.preventDefault()}\n\n    this.setState({ loggedIn: this.props.user.isLoggedIn() })\n  }\n\n  viewProfile = (event) => {\n    event.preventDefault()\n\n    this.setState({\n      viewProfile: true,\n      template: ''\n    })\n  }\n\n  selectComponentRender = () => {\n    if (this.state.loggedIn) {\n      return <WireframeEditView template={this.state.template}/>\n      // return <Profile />\n    } else {\n      return <Welcome />\n    }\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <Header loggedIn={this.state.loggedIn}\n                changeLoggedInState={this.changeLoggedInState}\n                selectTemplate={this.selectTemplate}\n                viewProfile={this.viewProfile}\n                user={this.props.user}\n        />\n        { this.selectComponentRender() }\n        <div className='footer'>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App.js';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport UserSession from './Tools/UserSession.js'\n\nReactDOM.render(<App user={ new UserSession }/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}